{"version":3,"sources":["hoc/withAuthRedirect.jsx","Assets/images/no_avatar.png","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/Header/PageCover.module.scss","components/Profile/Profile.module.scss","Assets/images/city_profile.png","components/Profile/MyPosts/MyPosts.module.scss","components/Profile/MyPosts/Post/Post.module.scss","components/Profile/Header/ProfileStatus.jsx","components/Profile/Header/PageCover.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","ProfileStatus","useState","editMode","setEditMode","userStatus","setUserStatus","useEffect","className","css","profileStatus","onClick","autoFocus","type","onChange","e","currentTarget","onBlur","updateUserStatus","PageCover","coverWrapper","mainImage","src","profileCoverImg","alt","avatarWrapper","avatar","userProfile","photos","large","noAvatar","uploadPhotoWrapper","isOwner","target","files","avatarFile","saveAvatar","description","name","fullName","lockingForJob","lookingForAJob","lookingForAJobDescription","about","aboutMe","contacts","website","vk","twitter","facebook","Post","postWrapp","item","postAva","postText","message","postLikes","likes","maxLength1000","maxLengthCreator","AddPostFormRedux","reduxForm","form","onSubmit","handleSubmit","txtAreaWrapp","Field","siteTextarea","component","ValidateFormControl","validateTag","placeholder","validate","required","btnSendWrapp","siteButton","MyPosts","post","posts","map","p","id","postMessage","likeCount","key","postsWrapper","formData","addPost","compose","profilePage","newPostText","Profile","ProfileWrapper","MyPostsContainer","Preloader","ProfileContainer","userId","match","params","authorizedUserId","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","withRouter"],"mappings":"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","file":"static/js/3.8ef820b1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps  = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","module.exports = __webpack_public_path__ + \"static/media/no_avatar.9843bf80.png\";","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"coverWrapper\":\"PageCover_coverWrapper__2irUZ\",\"mainImage\":\"PageCover_mainImage__3edg_\",\"avatarWrapper\":\"PageCover_avatarWrapper__3cKPl\",\"avatar\":\"PageCover_avatar__1mGQE\",\"uploadPhotoWrapper\":\"PageCover_uploadPhotoWrapper__24dFx\",\"profileStatus\":\"PageCover_profileStatus__19XlD\",\"description\":\"PageCover_description__3r_Qc\",\"name\":\"PageCover_name__29IMZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileWrapper\":\"Profile_ProfileWrapper__1N1VF\"};","module.exports = __webpack_public_path__ + \"static/media/city_profile.52c8af4e.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteLink\":\"MyPosts_siteLink__3iyc5\",\"siteLinkActive\":\"MyPosts_siteLinkActive__3E3tA\",\"siteCaption\":\"MyPosts_siteCaption__3mMQL\",\"siteButton\":\"MyPosts_siteButton__ArkFp\",\"siteTextarea\":\"MyPosts_siteTextarea__J9ize\",\"siteInput\":\"MyPosts_siteInput__2EyQn\",\"postsWrapper\":\"MyPosts_postsWrapper__3ViBy\",\"txtAreaWrapp\":\"MyPosts_txtAreaWrapp__3wNoI\",\"btnSendWrapp\":\"MyPosts_btnSendWrapp__9Guz5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postWrapp\":\"Post_postWrapp__jNr5Z\",\"item\":\"Post_item__3pFeH\",\"postText\":\"Post_postText__22aGb\",\"postLikes\":\"Post_postLikes__31Qgn\"};","import React, {useEffect, useState} from 'react';\r\nimport css from \"./PageCover.module.scss\";\r\n\r\nconst ProfileStatus = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [userStatus, setUserStatus] = useState(props.userStatus);\r\n\r\n    let editModeOn = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    let editModeOff = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(userStatus)\r\n    }\r\n\r\n    let onStatusChange = (e) => {\r\n        setUserStatus(e.currentTarget.value);\r\n    }\r\n\r\n    //Local state sinchronization with state\r\n    useEffect(() => {setUserStatus (props.userStatus)}, [props.userStatus]);\r\n\r\n    return (\r\n\r\n        <div className={css.profileStatus}>\r\n            {!editMode &&\r\n            <div>\r\n                <span onClick={editModeOn}>{props.userStatus || 'No status...'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input autoFocus={true}\r\n                       type=\"text\"\r\n                       value={userStatus}\r\n                       onChange={onStatusChange}\r\n                       onBlur={editModeOff}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatus;\r\n\r\n","import React from 'react';\r\nimport css from './PageCover.module.scss';\r\nimport profileCoverImg from '../../../Assets/images/city_profile.png';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport noAvatar from '../../../Assets/images/no_avatar.png';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nconst PageCover = (props) => {\r\n\r\n    let onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length) {\r\n            let avatarFile = e.target.files[0];\r\n            props.saveAvatar(avatarFile);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={css.coverWrapper}>\r\n            <div className={css.mainImage}>\r\n                <img src={profileCoverImg} alt=\"\"/>\r\n            </div>\r\n\r\n            <div className={css.avatarWrapper}>\r\n                <div className={css.avatar}>\r\n                    <img alt=\"\" src={props.userProfile.photos.large || noAvatar}/>\r\n                    <div className={css.uploadPhotoWrapper}>\r\n                        {!props.isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={css.description}>\r\n                    <div className={css.name}>{props.userProfile.fullName}</div>\r\n                    <ProfileStatus {...props} />\r\n                    <div className={css.lockingForJob}>Поиск работы: {props.userProfile.lookingForAJob\r\n                        ? 'в поиске' : 'не интересует'};</div>\r\n                    <div className={css.lookingForAJobDescription}>Интересующая работа: {props.userProfile.lookingForAJobDescription};</div>\r\n                    <div className={css.about}>Обо мне: {props.userProfile.aboutMe};</div>\r\n                    <div className={css.contacts}>Сайт: {props.userProfile.contacts.website}</div>\r\n                    <div className={css.contacts}>Сайт: {props.userProfile.contacts.vk}</div>\r\n                    <div className={css.contacts}>Сайт: {props.userProfile.contacts.twitter}</div>\r\n                    <div className={css.contacts}>Сайт: {props.userProfile.contacts.facebook}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PageCover;","import React from 'react';\r\nimport css from './Post.module.scss';\r\nimport postAva from '../../../../Assets/images/post_avatar.jpg'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={css.postWrapp}>\r\n            <div className={css.item}>\r\n                <img alt=\"\" src={postAva} />\r\n                <div className={css.postText}>{props.message}</div>\r\n                <div className={css.postLikes}>likes: {props.likes}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport css from './MyPosts.module.scss';\r\nimport Post from '../MyPosts/Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators\";\r\nimport {ValidateFormControl} from \"../../common/FormsControls/FormsControls\";\r\n\r\nlet maxLength1000 = maxLengthCreator (1000);\r\n\r\nconst AddPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={css.txtAreaWrapp}>\r\n            <Field className={css.siteTextarea}\r\n                   name='postText'\r\n                   component={ValidateFormControl}\r\n                   validateTag='textarea'\r\n                   placeholder=\"Type your news here..\"\r\n                   validate={[required, maxLength1000]}\r\n            />\r\n            <div className={css.btnSendWrapp}>\r\n                <button className={css.siteButton}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form: 'addPost'})(AddPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let addNewPost = (formData) => {\r\n        props.addPost(formData.postText);\r\n    }\r\n\r\n    let post = props.posts.map((p) => <Post id={p.id} message={p.postMessage} likes={p.likeCount} key={p.id}/>);\r\n\r\n    return (\r\n        <div className={css.postsWrapper}>\r\n            <label>My posts</label>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            {post}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect (mapStateToProps, {addPost})\r\n)(MyPosts);\r\n","import React from 'react';\r\nimport css from './Profile.module.scss';\r\nimport PageCover from './Header/PageCover';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n\r\n    if(!props.userProfile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={css.ProfileWrapper}>\r\n            <PageCover {...props}\r\n                       isOwner={props.isOwner}\r\n                       saveAvatar={props.saveAvatar}\r\n            />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, saveAvatar, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId\r\n            // if(!userId) {\r\n            //     this.props.history.push('/login')\r\n            // }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.match.params.userId != this.props.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={this.props.match.params.userId}\r\n                     saveAvatar={this.props.saveAvatar}\r\n            />\r\n        );\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => ({\r\n    userProfile: state.profilePage.userProfile,\r\n    userStatus: state.profilePage.userStatus,\r\n    authorizedUserId: state.auth.userId\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, saveAvatar}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}