{"version":3,"sources":["hoc/withAuthRedirect.jsx","components/Dialogs/Dialogs.module.scss","components/Dialogs/Messages/Message.module.scss","components/Dialogs/Talkers/Talker.module.scss","components/Dialogs/Messages/Message.jsx","components/Dialogs/Talkers/Talker.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Message","message","className","css","src","messageAvatar","alt","figureTalker","Talker","talkerName","name","path","linkId","talker","siteLink","activeClassName","siteLinkActive","maxLength1000","maxLengthCreator","DialogFormRedux","reduxForm","form","onSubmit","handleSubmit","sendControls","Field","siteTextarea","validate","required","component","ValidateFormControl","validateTag","placeholder","buttonWrapp","siteButton","Dialogs","dialogs","map","t","id","key","messages","m","caption","dialogsWrapper","talkers","formData","addMessage","messageText","compose","dialogsPage","newMessageText"],"mappings":"wOAIIA,EAAmB,SAACC,GAAD,MAAY,CAC/BC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IAEtCC,EAFqC,iLAKnC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eALT,GAEXC,IAAML,WAUtC,OAFqCM,YAASX,EAATW,CAA0BL,K,oBCjBnEM,EAAOC,QAAU,CAAC,SAAW,0BAA0B,eAAiB,gCAAgC,YAAc,6BAA6B,WAAa,4BAA4B,aAAe,8BAA8B,UAAY,2BAA2B,QAAU,yBAAyB,eAAiB,gCAAgC,QAAU,yBAAyB,SAAW,0BAA0B,aAAe,8BAA8B,YAAc,+B,oBCAveD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,4B,oBCA7GD,EAAOC,QAAU,CAAC,SAAW,yBAAyB,eAAiB,+BAA+B,YAAc,4BAA4B,WAAa,2BAA2B,aAAe,6BAA6B,UAAY,0BAA0B,OAAS,yB,0HCepQC,EAZC,SAACN,GACb,IAAIO,EAAUP,EAAMO,QACpB,OACI,yBAAKC,UAAWC,IAAIF,SAChB,yBAAKG,IAAKC,IAAeC,IAAI,KAC7B,uBAAGJ,UAAWC,IAAII,cACbN,K,0BCQFO,EAdA,SAACd,GAEZ,IAAIe,EAAaf,EAAMgB,KACnBC,EAAO,YAAcjB,EAAMkB,OAE/B,OACI,yBAAKV,UAAWC,IAAIU,QAChB,kBAAC,IAAD,CAASlB,GAAIgB,EAAMT,UAAWC,IAAIW,SAAUC,gBAAiBZ,IAAIa,gBAC5DP,K,kCCJbQ,EAAgBC,YAAiB,KAmB/BC,EAAkBC,YAAU,CAACC,KAAM,cAAjBD,EAjBL,SAAC1B,GAChB,OACI,0BAAM4B,SAAU5B,EAAM6B,aAAcrB,UAAWC,IAAIqB,cAC/C,kBAACC,EAAA,EAAD,CAAOvB,UAAWC,IAAIuB,aACfC,SAAU,CAACC,IAAUX,GACrBP,KAAK,cACLmB,UAAWC,IACXC,YAAY,WACZC,YAAY,uFAEnB,yBAAK9B,UAAWC,IAAI8B,aAChB,4BAAQ/B,UAAWC,IAAI+B,YAAvB,aAkCDC,EA1BC,SAACzC,GAEb,IAAImB,EAASnB,EAAM0C,QAAQC,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAAQC,GAAID,EAAEC,GAAI7B,KAAM4B,EAAE7B,WAAYG,OAAQ0B,EAAE1B,OAAQ4B,IAAKF,EAAEC,QACjGtC,EAAUP,EAAM+C,SAASJ,KAAI,SAACK,GAAD,OAAO,kBAAC,EAAD,CAASH,GAAIG,EAAEH,GAAItC,QAASyC,EAAEzC,QAASuC,IAAKE,EAAEH,QAMtF,OACI,6BACI,2BAAOrC,UAAWC,IAAIwC,SAAtB,8CACA,yBAAKzC,UAAWC,IAAIyC,gBAChB,yBAAK1C,UAAWC,IAAI0C,SACfhC,GAGL,yBAAKX,UAAWC,IAAIsC,UACfxC,EACD,kBAACkB,EAAD,CAAiBG,SAdb,SAACwB,GACjBpD,EAAMqD,WAAWD,EAASE,oB,wBCTnBC,sBACXpD,aATkB,SAACV,GACnB,MAAO,CACHiD,QAASjD,EAAM+D,YAAYd,QAC3BK,SAAUtD,EAAM+D,YAAYT,SAC5BU,eAAgBhE,EAAM+D,YAAYC,kBAKb,CAACJ,iBAC1BzD,IAFW2D,CAGbd","file":"static/js/5.50f63b3b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps  = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToProps)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteLink\":\"Dialogs_siteLink__2OOZ1\",\"siteLinkActive\":\"Dialogs_siteLinkActive__i97p6\",\"siteCaption\":\"Dialogs_siteCaption__JxN0m\",\"siteButton\":\"Dialogs_siteButton__35kbL\",\"siteTextarea\":\"Dialogs_siteTextarea__22u41\",\"siteInput\":\"Dialogs_siteInput__3lfg4\",\"caption\":\"Dialogs_caption__J7U-I\",\"dialogsWrapper\":\"Dialogs_dialogsWrapper__ko9nC\",\"talkers\":\"Dialogs_talkers__1rvAe\",\"messages\":\"Dialogs_messages__3crh_\",\"sendControls\":\"Dialogs_sendControls__2KTG8\",\"buttonWrapp\":\"Dialogs_buttonWrapp__1BoWa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__1tOX1\",\"figureTalker\":\"Message_figureTalker__JSwzg\",\"figureMe\":\"Message_figureMe__3sbwY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"siteLink\":\"Talker_siteLink__1CAhF\",\"siteLinkActive\":\"Talker_siteLinkActive__1UI6s\",\"siteCaption\":\"Talker_siteCaption__uy9S8\",\"siteButton\":\"Talker_siteButton__dR_cO\",\"siteTextarea\":\"Talker_siteTextarea__297jY\",\"siteInput\":\"Talker_siteInput__2Tcuf\",\"talker\":\"Talker_talker__1n9cs\"};","import React from 'react';\r\nimport css from './Message.module.scss';\r\nimport messageAvatar from '../../../Assets/images/post_avatar.jpg';\r\n\r\nconst Message = (props) => {\r\n    let message = props.message;\r\n    return (\r\n        <div className={css.message}>\r\n            <img src={messageAvatar} alt=\"\" />\r\n            <p className={css.figureTalker}>\r\n                {message}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport css from './Talker.module.scss';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Talker = (props) => {\r\n\r\n    let talkerName = props.name;\r\n    let path = '/dialogs/' + props.linkId;\r\n\r\n    return (\r\n        <div className={css.talker}>\r\n            <NavLink to={path} className={css.siteLink} activeClassName={css.siteLinkActive}>\r\n                {talkerName}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Talker;","import React from 'react';\r\nimport css from './Dialogs.module.scss';\r\nimport Message from \"./Messages/Message\";\r\nimport Talker from \"./Talkers/Talker\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators\";\r\nimport {ValidateFormControl} from \"../common/FormsControls/FormsControls\";\r\n\r\nlet maxLength1000 = maxLengthCreator(1000);\r\n\r\nconst DialogForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={css.sendControls}>\r\n            <Field className={css.siteTextarea}\r\n                   validate={[required, maxLength1000]}\r\n                   name='messageText'\r\n                   component={ValidateFormControl}\r\n                   validateTag='textarea'\r\n                   placeholder='Ваше сообщение...'\r\n            />\r\n            <div className={css.buttonWrapp}>\r\n                <button className={css.siteButton}>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogFormRedux = reduxForm({form: 'addMessage'})(DialogForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let talker = props.dialogs.map((t) => <Talker id={t.id} name={t.talkerName} linkId={t.linkId} key={t.id}/>);\r\n    let message = props.messages.map((m) => <Message id={m.id} message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (formData) => {\r\n        props.addMessage(formData.messageText);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <label className={css.caption}>Диалоги</label>\r\n            <div className={css.dialogsWrapper}>\r\n                <div className={css.talkers}>\r\n                    {talker}\r\n                </div>\r\n\r\n                <div className={css.messages}>\r\n                    {message}\r\n                    <DialogFormRedux onSubmit={addNewMessage}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n","import React from 'react';\r\nimport {\r\n    addMessage\r\n} from \"../../redux/dialog-reducer\"\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n// class DialogsContainer extends React.Component {\r\n//\r\n//     render() {\r\n//         return (\r\n//            <Dialogs {...this.props} />\r\n//         )\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        newMessageText: state.dialogsPage.newMessageText\r\n    }\r\n}\r\n\r\nexport default compose (\r\n    connect(mapStateToProps, {addMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}